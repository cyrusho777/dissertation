apiVersion: v1
kind: ServiceAccount
metadata:
  name: multi-resource-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multi-resource-scheduler-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["bindings", "pods/binding"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods/status"]
  verbs: ["patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-resource-scheduler-binding
subjects:
- kind: ServiceAccount
  name: multi-resource-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: multi-resource-scheduler-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: multi-resource-scheduler
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: multi-resource-scheduler
  template:
    metadata:
      labels:
        app: multi-resource-scheduler
    spec:
      serviceAccountName: multi-resource-scheduler
      containers:
      - name: scheduler
        image: cyrusho777/multi-resource-scheduler:latest
        imagePullPolicy: Always
        args:
        - "--alpha=0.8"
        env:
        - name: PROMETHEUS_URL
          value: "http://prometheus-server.default.svc.cluster.local:80/api/v1/query"
        resources:
          limits:
            cpu: "200m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi" 